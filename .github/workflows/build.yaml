name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies with Poetry
        run: |
          poetry install --no-interaction

      - name: Install pre-commit
        run: |
          poetry run pre-commit install

      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit run --all-files

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies with Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-interaction

      - name: Run Tests with pytest
        run: |
          poetry run pytest

      - name: Build Docker image
        run: |
          docker build -t my-python-app .

  release-drafter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Release Drafter
        uses: release-drafter/release-drafter@v5

      - name: Draft a release
        uses: release-drafter/release-drafter@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}